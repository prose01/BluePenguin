@use '~@angular/material' as mat;
@import '~@angular/material/theming';
@import "~flag-icon-css/sass/flag-icon";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Icons
@import 'https://fonts.googleapis.com/icon?family=Material+Icons';

/*#region Fonts*/
@import 'https://fonts.googleapis.com/css?family=Material+Icons+Two+Tone';
@import url('https://fonts.googleapis.com/css?family=Roboto:300,400,500');

$fontConfig: (
    display-4: mat.define-typography-level(112px, 112px, 300, 'Roboto', -0.0134em),
    display-3: mat.define-typography-level(56px, 56px, 400, 'Roboto', -0.0089em),
    display-2: mat.define-typography-level(45px, 48px, 400, 'Roboto', 0.0000em),
    display-1: mat.define-typography-level(34px, 40px, 400, 'Roboto', 0.0074em),
    headline: mat.define-typography-level(24px, 32px, 400, 'Roboto', 0.0000em),
    title: mat.define-typography-level(20px, 32px, 500, 'Roboto', 0.0075em),
    subheading-2: mat.define-typography-level(16px, 28px, 400, 'Roboto', 0.0094em),
    subheading-1: mat.define-typography-level(15px, 24px, 500, 'Roboto', 0.0067em),
    body-2: mat.define-typography-level(14px, 24px, 500, 'Roboto', 0.0179em),
    body-1: mat.define-typography-level(14px, 20px, 400, 'Roboto', 0.0179em),
    button: mat.define-typography-level(14px, 14px, 500, 'Roboto', 0.0893em),
    caption: mat.define-typography-level(12px, 20px, 400, 'Roboto', 0.0333em),
    input: mat.define-typography-level(inherit, 1.125, 400, 'Roboto', 1.5px)
);

$dark-text: #607D8B;
$dark-primary-text: rgba($dark-text, 0.87);
$dark-accent-text: rgba($dark-primary-text, 0.54);
$dark-disabled-text: rgba($dark-primary-text, 0.38);
$dark-dividers: rgba($dark-primary-text, 0.12);
$dark-focused: rgba($dark-primary-text, 0.12);

mat.$light-theme-foreground-palette: (
    base: black, divider: $dark-dividers,
    dividers: $dark-dividers,
    disabled: $dark-disabled-text,
    disabled-button: rgba($dark-text, 0.26),
    disabled-text: $dark-disabled-text,
    elevation: black,
    secondary-text: $dark-accent-text,
    hint-text: $dark-disabled-text,
    accent-text: $dark-accent-text,
    icon: $dark-accent-text,
    icons: $dark-accent-text,
    text: $dark-primary-text,
    slider-min: $dark-primary-text,
    slider-off: rgba($dark-text, 0.26),
    slider-off-active: $dark-disabled-text
);

$light-text: #ffffff;
$light-primary-text: $light-text;
$light-accent-text: rgba($light-primary-text, 0.7);
$light-disabled-text: rgba($light-primary-text, 0.5);
$light-dividers: rgba($light-primary-text, 0.12);
$light-focused: rgba($light-primary-text, 0.12);

mat.$dark-theme-foreground-palette: (
    base: $light-text,
    divider: $light-dividers,
    dividers: $light-dividers,
    disabled: $light-disabled-text,
    disabled-button: rgba($light-text, 0.3),
    disabled-text: $light-disabled-text,
    elevation: black,
    hint-text: $light-disabled-text,
    secondary-text: $light-accent-text,
    accent-text: $light-accent-text,
    icon: $light-text,
    icons: $light-text,
    text: $light-text,
    slider-min: $light-text,
    slider-off: rgba($light-text, 0.3),
    slider-off-active: rgba($light-text, 0.3),
);

// Compute font config
@include mat.core($fontConfig);

/*#endregion Fonts*/

// Theme Config
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

/*#region Primary*/

$mat-primary: (
      main: #eeeeee,
      lighter: #cfd8dc,
      darker: #44606e,
      200: #cfd8dc, // For slide toggle,
      contrast : (
        main: $dark-primary-text,
        lighter: $dark-primary-text,
        darker: $dark-primary-text
      )
);

.color-primary-main {
  background-color: mat.get-color-from-palette($mat-primary, main);
  padding: 20px;
  text-align: center;
  color: $light-primary-text;
  max-height: 120px;
  min-width: 120px;
  border-radius: 2px;
}

$theme-primary: mat.define-palette($mat-primary, main, lighter, darker);

/*#endregion Primary*/

/*#region Accent*/

// More blueish alternative
/*$mat-accent: (
    main: #266b95,
    lighter: #bed3df,
    darker: #174e78,
    200: #266b95, // For slide toggle,
    contrast: (
      main: $light-primary-text,
      lighter: $dark-primary-text,
      darker: $light-primary-text
    )
);*/

$mat-accent: (
    main: #607D8B,
    lighter: #cfd8dc,
    darker: #44606e,
    200: #cfd8dc, // For slide toggle,
    contrast: (
      main: $light-primary-text,
      lighter: $light-primary-text,
      darker: $light-primary-text
    )
);

.color-accent-main {
  background-color: mat.get-color-from-palette($mat-accent, main);
  padding: 20px;
  text-align: center;
  color: $light-primary-text;
  max-height: 120px;
  min-width: 120px;
  border-radius: 2px;
}

body {
  --accent-color: #266b95;
  --accent-lighter-color: #bed3df;
  --accent-darker-color: #174e78;
  --text-accent-color: #{$light-primary-text};
  --text-accent-lighter-color: #{$dark-primary-text};
  --text-accent-darker-color: #{$light-primary-text};
}

$theme-accent: mat.define-palette($mat-accent, main, lighter, darker);

/*#endregion Accent*/

/*#region warn*/
// The warn palette is optional (defaults to red).
$mat-warn: (
    main: #f07537,
    lighter: #fbd6c3,
    darker: #e95823,
    200: #f07537, // For slide toggle,
    contrast : (
      main: $dark-primary-text,
      lighter: $dark-primary-text,
      darker: $light-primary-text,
    )
);

.color-warn-main {
  background-color: mat.get-color-from-palette($mat-warn, main);
  padding: 20px;
  text-align: center;
  color: $light-primary-text;
  max-height: 120px;
  min-width: 120px;
  border-radius: 2px;
}

body {
  --warn-color: #f07537;
  --warn-lighter-color: #fbd6c3;
  --warn-darker-color: #e95823;
  --text-warn-color: #{$dark-primary-text};
  --text-warn-lighter-color: #{$dark-primary-text};
  --text-warn-darker-color: #{$light-primary-text};
}

$theme-warn: mat.define-palette($mat-warn, main, lighter, darker);

/*#endregion warn*/

// Create the theme object. A theme consists of configurations for individual
// theming systems such as `color` or `typography`.
//$candy-app-theme: mat.define-light-theme(( color: ( primary: $app-primary, accent: $app-accent, warn: $app-warn, ) ));
$theme: mat.define-light-theme($theme-primary, $theme-accent, $theme-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($theme);
